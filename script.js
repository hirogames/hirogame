const challenges = [
    "Chanter une chanson a cappella",
    "Faire le coq",
    "Faire dix tours sur soi-m√™me avec un balai",
    "Boire un cocktail pr√©par√© par les autres",
    "Faire du pole dance autour d‚Äôun lampadaire",
    "Parler sans utiliser une lettre d√©finie",
    "Mimer une c√©l√©brit√©",
    "Faire la Macarena √† l'envers",
    "Interdiction de dire 'non' toute la soir√©e",
    "Faire un strip-tease (habill√©)",
    "Imiter la d√©marche de la personne √† votre droite",
    "Faire un selfie dans une position ridicule",
    "√âchanger vos v√™tements avec une autre personne",
    "Faire un discours comme si vous √©tiez pr√©sident",
    "Danser comme si personne ne regardait",
    "Faire un moonwalk",
    "Imiter un animal",
    "Chanter une chanson √† l'envers",
    "Danser sur une chanson choisie",
    "Envoyer un message embarrassant √† un ex",
    "Changer la sonnerie de ton t√©l√©phone pour un son ridicule",
    "Dire une phrase en chuchotant dans l‚Äôoreille d‚Äôun autre joueur",
    "Porter une chaussette sur une main pendant deux tours",
    "Faire 10 pompes ou squats",
    "Appeler un restaurant et poser une question ridicule",
    "Parler en rimes pendant 5 minutes",
    "Mettre un gla√ßon dans son pantalon",
    "Inventer une chanson de rap sur un sujet al√©atoire",
    "Faire semblant de rire de mani√®re excessive √† tout ce qui est dit",
    "Dire un tongue twister trois fois rapidement",
    "Faire une d√©claration d'amour √† un inconnu sur les r√©seaux sociaux",
    "Changer de voix √† chaque phrase pendant 2 minutes",

    // D√©fis ax√©s sur Hiro
    "Hiro doit boire deux shots chaque fois que quelqu'un dit 'boire'",
    "Hiro doit faire un moonwalk apr√®s avoir bu deux shots",
    "Hiro doit imiter un animal apr√®s avoir pris deux bouff√©es d'herbe",
    "Hiro doit chanter une chanson √† l'envers apr√®s deux verres de vin",
    "Hiro doit danser sur une chanson choisie par le groupe apr√®s avoir fum√© deux fois",
    "Hiro doit mimer un film en ayant les yeux band√©s apr√®s deux shots",
    "Hiro doit √©changer son verre avec la personne en face et boire cul sec deux fois",
    "Hiro doit raconter une blague en tenant deux gla√ßons dans sa bouche",
    "Hiro doit faire le poirier apr√®s avoir bu deux cocktails",
    "Hiro doit parler avec un accent apr√®s avoir fum√© deux fois",
    "Hiro doit faire une danse TikTok apr√®s deux verres de bi√®re",
    "Hiro doit envoyer un message embarrassant √† un ex apr√®s deux shots",
    "Hiro doit changer la sonnerie de son t√©l√©phone pour un son ridicule apr√®s deux verres",
    "Hiro doit dire une phrase en chuchotant dans l‚Äôoreille d‚Äôun autre joueur apr√®s deux bouff√©es",
    "Hiro doit imiter un b√©b√© qui pleure apr√®s avoir bu deux verres",
    "Hiro doit porter une chaussette sur une main pendant deux tours apr√®s avoir fum√©",
    "Hiro doit faire 10 pompes ou squats apr√®s avoir fum√© deux fois",
    "Hiro doit faire un tour de la pi√®ce en courant sur les genoux apr√®s deux shots",
    "Hiro doit appeler un restaurant et poser une question ridicule apr√®s deux verres",
    "Hiro doit parler en rimes pendant 5 minutes apr√®s deux shots",
    "Hiro doit dessiner quelque chose les yeux ferm√©s apr√®s avoir fum√© deux fois",
    "Hiro doit boire deux verres sans utiliser les mains",
    "Hiro doit faire semblant d'√™tre en slow motion pendant 2 minutes apr√®s deux shots",
    "Hiro doit faire un bisou sur le cr√¢ne d‚Äôun chauve apr√®s deux verres",
    "Hiro doit convaincre un √©tranger de chanter bon anniversaire apr√®s deux bouff√©es",
    "Hiro doit faire un dessin de quelqu‚Äôun dans la rue et essayer de le lui vendre apr√®s deux shots",
    "Hiro doit garder un gla√ßon dans sa main jusqu‚Äô√† la fonte totale apr√®s deux verres",
    "Hiro doit √©crire une d√©claration d‚Äôamour sur un tableau blanc apr√®s avoir fum√© deux fois",
    "Hiro doit jouer √† un jeu vid√©o en √©tant debout apr√®s deux shots",
    "Hiro doit faire une d√©monstration de yoga apr√®s avoir fum√© deux fois",
    "Hiro doit chanter une chanson en imitant un personnage de dessin anim√© apr√®s deux shots",
    "Hiro doit faire le clown pendant 5 minutes apr√®s deux verres",
    "Hiro doit raconter une histoire dr√¥le apr√®s avoir fum√© deux fois",
    "Hiro doit changer son statut Facebook en quelque chose d'embarrassant apr√®s deux shots",
    "Hiro doit faire un selfie en train de faire une danse √©trange",
    "Hiro doit pr√©parer un plat √©trange et le go√ªter",
    "Hiro doit faire une imitation d'un super-h√©ros",
    "Hiro doit envoyer un message √©trange √† un ami",
    "Hiro doit faire une vid√©o de 30 secondes en faisant une activit√© ridicule",
    "Hiro doit essayer un look de mode bizarre pour le reste de la soir√©e",
    "Hiro doit lire un passage de livre en imitant une voix de cartoon",
    "Hiro doit faire un discours sur un sujet al√©atoire",
    "Hiro doit participer √† un d√©fi de danse sur les r√©seaux sociaux",
    "Hiro doit faire une d√©monstration de magie avec des objets du quotidien",
    "Hiro doit √©crire une lettre d'amour fictive √† un personnage c√©l√®bre",
    "Hiro doit r√©aliser une parodie d'une sc√®ne de film",
    "Hiro doit faire des grimaces jusqu'√† ce que quelqu'un rit",
    "Hiro doit imiter une √©mission de t√©l√©vision",
    "Hiro doit √©crire une chanson en utilisant des objets de la pi√®ce comme instruments",
    "Hiro doit dessiner un portrait d'un ami avec les yeux ferm√©s",
    "Hiro doit faire des exercices de yoga en imitant un animal",
    "Hiro doit faire une lecture dramatique d'un texte dr√¥le",
    "Hiro doit fabriquer un chapeau √† partir de mat√©riaux trouv√©s dans la pi√®ce",
    "Hiro doit cr√©er un m√®me bas√© sur une photo de lui",
    "Hiro doit essayer de jongler avec des objets l√©gers",
    "Hiro doit r√©aliser une performance de stand-up improvis√©",
    "Hiro doit faire des vocalises comme un chanteur d'op√©ra",
    "Hiro doit cr√©er une danse en utilisant uniquement les bras",
    "Hiro doit imiter un personnage de dessin anim√© avec des accessoires improvis√©s",
    "Hiro doit √©crire une courte histoire en 5 minutes",
    "Hiro doit organiser un mini d√©fil√© de mode avec des v√™tements de la pi√®ce",
    "Hiro doit essayer de parler en vers",
    "Hiro doit cr√©er une ≈ìuvre d'art avec des √©l√©ments trouv√©s dans la pi√®ce",
    "Hiro doit faire un num√©ro de magie avec des cartes",
    "Hiro doit r√©aliser une pr√©sentation PowerPoint sur un sujet absurde",
    "Hiro doit dessiner un personnage de film avec les pieds",
    "Hiro doit raconter une blague en imitant diff√©rents accents",
    "Hiro doit faire une d√©monstration de danse avec des mouvements improbables"
];

document.addEventListener('DOMContentLoaded', () => {
    // R√©cup√©ration des √©l√©ments HTML par leur ID
    const prevChallengeBtn = document.getElementById('prev-challenge-btn');
    const nextChallengeBtn = document.getElementById('next-challenge-btn');
    const replayBtn = document.getElementById('replay-btn');
    const challengeDisplay = document.getElementById('challenge-display');
    const challengeCounter = document.getElementById('challenge-counter');
    const progress = document.getElementById('progress');
    const emojiContainer = document.getElementById('emoji-container');
    const scoreDisplay = document.getElementById('score-display');

    // Initialisation des variables
    let usedChallenges = []; // Tableau pour stocker les d√©fis d√©j√† utilis√©s
    const totalChallenges = 50; // Nombre total de d√©fis dans le jeu
    let progressWidth = 0; // Largeur initiale de la barre de progression

    // Fonction pour obtenir un d√©fi al√©atoire non r√©p√©t√©
    function getRandomChallenge() {
        let randomIndex;
        do {
            randomIndex = Math.floor(Math.random() * challenges.length); // S√©lectionne un index al√©atoire
        } while (usedChallenges.includes(randomIndex) && usedChallenges.length < challenges.length); 
        // R√©p√®te tant que le d√©fi est d√©j√† utilis√© et que tous les d√©fis ne sont pas encore utilis√©s
        return randomIndex;
    }

    // Fonction pour afficher le d√©fi
    function showChallenge(index) {
        challengeDisplay.textContent = challenges[index]; // Affiche le d√©fi actuel
        challengeCounter.textContent = `${usedChallenges.length}/${totalChallenges}`; // Met √† jour le compteur de d√©fis
    }

    // Fonction pour mettre √† jour la barre de progression
    function updateProgress() {
        progressWidth = (usedChallenges.length / totalChallenges) * 100; // Calcule le pourcentage de progression
        progress.style.width = `${progressWidth}%`; // Met √† jour la largeur de la barre de progression
    }

    // Fonction appel√©e √† la fin du jeu
    function endGame() {
        confetti(); // Lance les confettis
        showEmojis(); // Affiche les emojis
        challengeDisplay.style.display = 'none'; // Cache le d√©fi
        scoreDisplay.style.display = 'block'; // Affiche le score final
        scoreDisplay.textContent = `Score Final: ${usedChallenges.length}/${totalChallenges}`; // Affiche le score
        prevChallengeBtn.style.display = 'none'; // Cache le bouton pr√©c√©dent
        nextChallengeBtn.style.display = 'none'; // Cache le bouton suivant
        replayBtn.style.display = 'block'; // Affiche le bouton rejouer
    }

    // Fonction pour afficher des emojis festifs
    function showEmojis() {
        const emojis = ['üéâ', 'üéä', 'üéà', 'ü•≥', 'üí•']; // Liste d'emojis festifs
        const numEmojis = 50; // Nombre d'emojis √† afficher

        for (let i = 0; i < numEmojis; i++) {
            const emoji = document.createElement('div'); // Cr√©e un nouvel √©l√©ment div pour l'emoji
            emoji.classList.add('emoji'); // Ajoute la classe 'emoji' √† l'√©l√©ment
            emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)]; // S√©lectionne un emoji al√©atoire
            emoji.style.left = `${Math.random() * 100}vw`; // Position horizontale al√©atoire
            emoji.style.top = `${Math.random() * 100}vh`; // Position verticale al√©atoire
            emoji.style.opacity = '1'; // Opacit√© √† 1 pour √™tre visible
            emoji.style.fontSize = `${Math.random() * 2 + 1}em`; // Taille al√©atoire de l'emoji
            emojiContainer.appendChild(emoji); // Ajoute l'emoji au conteneur

            // Animation de la chute des emojis
            emoji.animate([
                { transform: `translateY(0)` },
                { transform: `translateY(100vh)` }
            ], {
                duration: 4000 + Math.random() * 2000, // Dur√©e de l'animation entre 4 et 6 secondes
                easing: 'ease-out', // Courbe d'animation
                iterations: 1 // Animation unique
            });

            // Nettoyage des emojis apr√®s l'animation
            setTimeout(() => {
                emoji.remove(); // Supprime l'emoji apr√®s l'animation
            }, 6000); // 6 secondes avant la suppression
        }
    }

    // Gestionnaire d'√©v√©nement pour le bouton "Suivant"
    nextChallengeBtn.addEventListener('click', () => {
        if (usedChallenges.length < totalChallenges) {
            const randomIndex = getRandomChallenge(); // R√©cup√®re un d√©fi al√©atoire
            usedChallenges.push(randomIndex); // Ajoute l'index au tableau des d√©fis utilis√©s
            showChallenge(randomIndex); // Affiche le d√©fi
            updateProgress(); // Met √† jour la progression
        } else {
            endGame(); // Fin du jeu si tous les d√©fis sont utilis√©s
        }
    });

    // Gestionnaire d'√©v√©nement pour le bouton "Pr√©c√©dent"
    prevChallengeBtn.addEventListener('click', () => {
        if (usedChallenges.length > 1) {
            usedChallenges.pop(); // Retire le dernier d√©fi du tableau
            showChallenge(usedChallenges[usedChallenges.length - 1]); // Affiche le d√©fi pr√©c√©dent
            updateProgress(); // Met √† jour la progression
        }
    });

    // Gestionnaire d'√©v√©nement pour le bouton "Rejouer"
    replayBtn.addEventListener('click', () => {
        usedChallenges = []; // R√©initialise le tableau des d√©fis utilis√©s
        showChallenge(getRandomChallenge()); // Affiche un nouveau d√©fi al√©atoire
        updateProgress(); // R√©initialise la progression
        replayBtn.style.display = 'none'; // Cache le bouton rejouer
        prevChallengeBtn.style.display = 'block'; // Affiche le bouton pr√©c√©dent
        nextChallengeBtn.style.display = 'block'; // Affiche le bouton suivant
        scoreDisplay.style.display = 'none'; // Cache l'affichage du score
        challengeDisplay.style.display = 'block'; // Affiche le d√©fi
        emojiContainer.innerHTML = ''; // Efface les anciens emojis
    });

    // Initialise le premier d√©fi et la barre de progression au chargement de la page
    showChallenge(getRandomChallenge());
    updateProgress();
});
